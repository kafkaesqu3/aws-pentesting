import requests
from bs4 import BeautifulSoup

"""
MISC REGIONS?
s3-us-gov-west-1.amazonaws.com
s3-fips-us-gov-west-1.amazonaws.com
s3-website-us-gov-west-1.amazonaws.com
"""

bucket_permutations = ["-backup", "-media", "-old", "-dev", "-prod", "-qa", "-preprod", "-files", "-storage", "-tst"]
tlds = [".com", ".org", ".net"]

#given a domain and a bucket name, checks the status of the bucket
#if valid, returns the url with the proper bucket region
def check_bucket_status(domain, bucket_name):
    bucket_url = "https://s3.us-east-1.amazonaws.com/" + str(domain + bucket_name)
    r = requests.get(bucket_url)
    soup = BeautifulSoup(r.text, "html.parser")
    response_code = soup.find('code').text.encode("utf8")
    if response_code == "NoSuchBucket":
        # print("No bucket at {0}".format(bucket_url))
        return False
    elif response_code == "PermanentRedirect":
        bucket_url = soup.find('endpoint').text.encode("utf8")
        print("[+] Found bucket at {0}".format(bucket_url))
        return bucket_url

def find_buckets(domain):
    print("[*] Finding buckets on target {0}".format(domain))

    if "." in domain: #TLD given by yser
        tld = domain.split('.')[-1]
        domain = domain.split('.')[0]
    else: #no TLD given by user
        tld = ""

    found_buckets = []
    for permutation in bucket_permutations:
        checked_bucket = check_bucket_status(domain, permutation)
        if checked_bucket is not False:
            found_buckets.append(checked_bucket)

    if tld != "":
        for tld in tlds:
            checked_bucket = check_bucket_status(domain, tld)
            if checked_bucket is not False:
                found_buckets.append(checked_bucket)

    return found_buckets

buckets = find_buckets("zioptis.com")
#Does bucket allow public listing of files